transport select jtag

reset_config trst_and_srst

adapter speed 1000
jtag_ntrst_delay 500

#reset_config trst_only trst_open_drain
gdb_breakpoint_override hard

if { [info exists CHIPNAME] } {
  set _CHIPNAME $CHIPNAME
} else {
  set _CHIPNAME bcm2711
}

if { [info exists DAP_TAPID] } {
   set _DAP_TAPID $DAP_TAPID
} else {
   # rpi3?
   #set _DAP_TAPID 0xf8600077
   # rpi4?
   set _DAP_TAPID 0x4ba00477
}

jtag newtap $_CHIPNAME tap -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_DAP_TAPID -enable
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.tap

set _TARGETNAME $_CHIPNAME.a72
set _CTINAME $_CHIPNAME.cti

# These are for rpi3
#set DBGBASE {0x80010000 0x80012000 0x80014000 0x80016000}
#set CTIBASE {0x80018000 0x80019000 0x8001a000 0x8001b000}
# These are for rpi4
set DBGBASE {0x80410000 0x80510000 0x80610000 0x80710000}
set CTIBASE {0x80420000 0x80520000 0x80620000 0x80720000}
set _cores 4

for { set _core 0 } { $_core < $_cores } { incr _core } {

    cti create $_CTINAME.$_core -dap $_CHIPNAME.dap -ap-num 0 \
        -baseaddr [lindex $CTIBASE $_core]

    target create $_TARGETNAME.$_core aarch64 \
        -dap $_CHIPNAME.dap -coreid $_core \
        -dbgbase [lindex $DBGBASE $_core] -cti $_CTINAME.$_core

    $_TARGETNAME.$_core configure -event reset-assert-post "aarch64 dbginit"
}
